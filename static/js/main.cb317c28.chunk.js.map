{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","imdbId","MoviesList","movies","map","FindMovie","addMovieToMovieList","_useState","useState","_useState2","_slicedToArray","movieSearch","setMovieSearch","_useState3","_useState4","setMovie","_useState5","_useState6","loading","setLoading","_useState7","_useState8","cantFindMovie","setCantFindMovie","findMovieHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","query","fetch","concat","then","res","json","catch","Response","Error","data","moviePoster","Poster","newMovie","Title","Plot","imdbID","finally","stop","_x","apply","arguments","_Fragment","htmlFor","type","id","placeholder","value","onChange","target","movieSearchHandler","disabled","length","onClick","undefined","App","setMovies","some","existingMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb317c28.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl + movie.imdbId} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { useState, FC } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovieToMovieList: (v: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = ({ addMovieToMovieList }) => {\n  const [movieSearch, setMovieSearch] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [loading, setLoading] = useState(false);\n  const [cantFindMovie, setCantFindMovie] = useState(false);\n\n  const movieSearchHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCantFindMovie(false);\n    setMovieSearch(e.target.value);\n  };\n\n  const findMovieHandler = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    setLoading(true);\n    getMovie(movieSearch)\n      .then(data => {\n        if ('Error' in data) {\n          setCantFindMovie(true);\n\n          return;\n        }\n\n        const moviePoster = data.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : data.Poster;\n\n        const newMovie = {\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: moviePoster,\n          imdbUrl: 'https://www.imdb.com/title/',\n          imdbId: data.imdbID,\n        };\n\n        setMovie(newMovie);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const addToMovieListHandler = () => {\n    if (movie) {\n      addMovieToMovieList(movie);\n    }\n\n    setMovie(undefined);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${cantFindMovie && 'is-danger'}`}\n              value={movieSearch}\n              onChange={e => movieSearchHandler(e)}\n            />\n          </div>\n          {\n            cantFindMovie && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              // is-loading\n              className={`button is-light ${loading && 'is-loading'}`}\n              disabled={movieSearch.length === 0}\n              onClick={e => findMovieHandler(e)}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addToMovieListHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\n// const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=18d8448e';\nconst API_URL = 'https://www.omdbapi.com/?apikey=18d8448e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieToMovieList = (movie: Movie) => {\n    if (!movies.some(existingMovie => existingMovie.imdbId === movie.imdbId)) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovieToMovieList={addMovieToMovieList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}